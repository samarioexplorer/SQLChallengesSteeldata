CREATE TABLE country (
country_id INT PRIMARY KEY,
country_name VARCHAR(50),
head_office VARCHAR(50)
);

INSERT INTO country (country_id, country_name, head_office)
VALUES (1, 'UK', 'London'),
(2, 'USA', 'New York'),
(3, 'China', 'Beijing');

CREATE TABLE customers (
customer_id INT PRIMARY KEY,
first_shop DATE,
age INT,
rewards VARCHAR(50),
can_email VARCHAR(50)
);

INSERT INTO customers (customer_id, first_shop, age, rewards, can_email)
VALUES (1, '2022-03-20', 23, 'yes', 'no'),
(2, '2022-03-25', 26, 'no', 'no'),
(3, '2022-04-06', 32, 'no', 'no'),
(4, '2022-04-13', 25, 'yes', 'yes'),
(5, '2022-04-22', 49, 'yes', 'yes'),
(6, '2022-06-18', 28, 'yes', 'no'),
(7, '2022-06-30', 36, 'no', 'no'),
(8, '2022-07-04', 37, 'yes', 'yes');

CREATE TABLE orders (
order_id INT PRIMARY KEY,
customer_id INT,
date_shop DATE,
sales_channel VARCHAR(50),
country_id INT,
FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
FOREIGN KEY (country_id) REFERENCES country(country_id)
);

INSERT INTO orders (order_id, customer_id, date_shop, sales_channel, country_id)
VALUES (1, 1, '2023-01-16', 'retail', 1),
(2, 4, '2023-01-20', 'retail', 1),
(3, 2, '2023-01-25', 'retail', 2),
(4, 3, '2023-01-25', 'online', 1),
(5, 1, '2023-01-28', 'retail', 3),
(6, 5, '2023-02-02', 'online', 1),
(7, 6, '2023-02-05', 'retail', 1),
(8, 3, '2023-02-11', 'online', 3);

CREATE TABLE products (
product_id INT PRIMARY KEY,
category VARCHAR(50),
price NUMERIC(5,2)
);

INSERT INTO products (product_id, category, price)
VALUES (1, 'food', 5.99),
(2, 'sports', 12.49),
(3, 'vitamins', 6.99),
(4, 'food', 0.89),
(5, 'vitamins', 15.99);

CREATE TABLE baskets (
order_id INT,
product_id INT,
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (product_id) REFERENCES products(product_id)
);

INSERT INTO baskets (order_id, product_id)
VALUES (1, 1),
(1, 2),
(1, 5),
(2, 4),
(3, 3),
(4, 2),
(4, 1),
(5, 3),
(5, 5),
(6, 4),
(6, 3),
(6, 1),
(7, 2),
(7, 1),
(8, 3),
(8, 3);

#1. What are the names of all the countries in the country table?
SELECT Country_name as Countries
FROM country
ORDER BY country_name ASC;

#2. What is the total number of customers in the customers table?
SELECT COUNT(customer_id) as Costumers 
FROM customers;

#3. What is the average age of customers who can receive marketing emails (can_email is set to 'yes')?
SELECT ROUND(avg(AGE))
FROM CUSTOMERS
WHERE can_email = 'yes';

#4. How many orders were made by customers aged 30 or older?
SELECT COUNT((o.order_id)) as Orders_placed
FROM orders o
JOIN customers cu on cu.customer_id = o.customer_id
WHERE cu.age > 30

#5. What is the total revenue generated by each product category?
SELECT Category, SUM(price) AS Total_Revenue
FROM products pr
INNER JOIN baskets bk ON pr.product_id = bk.product_id
GROUP BY pr.category
ORDER BY SUM(price) DESC;

#6. What is the average price of products in the 'food' category?
SELECT ROUND(avg(price), 2) as Average_price
FROM products
WHERE category = 'food';

#7. How many orders were made in each sales channel (sales_channel column) in the orders table?
SELECT sales_channel as Sales_Method, COUNT(order_id) as Orders_placed
FROM orders
GROUP BY sales_channel
ORDER BY COUNT(order_id) DESC;

#8.What is the date of the latest order made by a customer who can receive marketing emails?
SELECT o.date_shop as Order_date, cu.customer_id as CustomerID
FROM orders o
JOIN customers cu on o.customer_id = cu.customer_id
WHERE cu.can_email = 'yes'
ORDER BY o.date_shop DESC
LIMIT 1;

#9. What is the name of the country with the highest number of orders?
SELECT Country_name, COUNT(order_id) AS Orders_placed
FROM country cy
JOIN orders o ON cy.country_id = o.country_id
GROUP BY cy.country_name
ORDER BY COUNT(order_id) DESC
LIMIT 1;

#10. What is the average age of customers who made orders in the 'vitamins' product category?
SELECT ROUND(AVG(cu.age)) as Average_age
FROM customers cu
JOIN orders o
ON cu.customer_id = o.customer_id
JOIN baskets bk
ON bk.order_id = o.order_id
JOIN products pr
ON bk.product_id = pr.product_id
WHERE category = "vitamins"
GROUP BY pr.category;